{"status":"OK","message":"","body":{"md.md":{"name":"md","group":"md","className":"org.apache.zeppelin.markdown.Markdown","properties":{},"path":"/home/Downloads/incubator-zeppelin-master/interpreter/md"},"flink.flink":{"name":"flink","group":"flink","className":"org.apache.zeppelin.flink.FlinkInterpreter","properties":{"port":{"defaultValue":"6123","description":"port of running JobManager"},"host":{"defaultValue":"local","description":"host name of running JobManager. \u0027local\u0027 runs flink in local mode"}},"path":"/home/Downloads/incubator-zeppelin-master/interpreter/flink"},"ignite.ignitesql":{"name":"ignitesql","group":"ignite","className":"org.apache.zeppelin.ignite.IgniteSqlInterpreter","properties":{"ignite.jdbc.url":{"defaultValue":"jdbc:ignite://localhost:11211/","description":"Ignite JDBC connection URL."}},"path":"/home/Downloads/incubator-zeppelin-master/interpreter/ignite"},"tajo.tql":{"name":"tql","group":"tajo","className":"org.apache.zeppelin.tajo.TajoInterpreter","properties":{"tajo.jdbc.uri":{"defaultValue":"jdbc:tajo://localhost:26002/default","description":"The URL for TajoServer."}},"path":"/home/Downloads/incubator-zeppelin-master/interpreter/tajo"},"sh.sh":{"name":"sh","group":"sh","className":"org.apache.zeppelin.shell.ShellInterpreter","properties":{},"path":"/home/Downloads/incubator-zeppelin-master/interpreter/sh"},"hive.hql":{"name":"hql","group":"hive","className":"org.apache.zeppelin.hive.HiveInterpreter","properties":{"hive.hiveserver2.password":{"defaultValue":"","description":"The password for the hive user"},"hive.hiveserver2.user":{"defaultValue":"hive","description":"The hive user"},"hive.hiveserver2.url":{"defaultValue":"jdbc:hive2://localhost:10000","description":"The URL for HiveServer2."}},"path":"/home/Downloads/incubator-zeppelin-master/interpreter/hive"},"ignite.ignite":{"name":"ignite","group":"ignite","className":"org.apache.zeppelin.ignite.IgniteInterpreter","properties":{"ignite.config.url":{"defaultValue":"","description":"Configuration URL. Overrides all other settings."},"ignite.peerClassLoadingEnabled":{"defaultValue":"true","description":"Peer class loading enabled. true or false"},"ignite.clientMode":{"defaultValue":"true","description":"Client mode. true or false"},"ignite.addresses":{"defaultValue":"127.0.0.1:47500..47509","description":"Coma separated list of addresses (e.g. 127.0.0.1:47500 or 127.0.0.1:47500..47509)"}},"path":"/home/Downloads/incubator-zeppelin-master/interpreter/ignite"},"psql.sql":{"name":"sql","group":"psql","className":"org.apache.zeppelin.postgresql.PostgreSqlInterpreter","properties":{"postgresql.password":{"defaultValue":"","description":"The PostgreSQL user password"},"postgresql.max.result":{"defaultValue":"1000","description":"Max number of SQL result to display."},"postgresql.user":{"defaultValue":"gpadmin","description":"The PostgreSQL user name"},"postgresql.url":{"defaultValue":"jdbc:postgresql://localhost:5432/","description":"The URL for PostgreSQL."},"postgresql.driver.name":{"defaultValue":"org.postgresql.Driver","description":"JDBC Driver Name"}},"path":"/home/Downloads/incubator-zeppelin-master/interpreter/psql"},"geode.oql":{"name":"oql","group":"geode","className":"org.apache.zeppelin.geode.GeodeOqlInterpreter","properties":{"geode.max.result":{"defaultValue":"1000","description":"Max number of OQL result to display."},"geode.locator.host":{"defaultValue":"localhost","description":"The Geode Locator Host."},"geode.locator.port":{"defaultValue":"10334","description":"The Geode Locator Port"}},"path":"/home/Downloads/incubator-zeppelin-master/interpreter/geode"},"cassandra.cassandra":{"name":"cassandra","group":"cassandra","className":"org.apache.zeppelin.cassandra.CassandraInterpreter","properties":{"cassandra.pooling.new.connection.threshold.remote":{"defaultValue":"100","description":"Cassandra new connection threshold remove. Protocol V2 and below default \u003d 100Protocol V3 and above default \u003d 200"},"cassandra.query.default.fetchSize":{"defaultValue":"5000","description":"Cassandra query default fetch size. Default \u003d 5000"},"cassandra.socket.tcp.no_delay":{"defaultValue":"true","description":"Cassandra socket TCP no delay. Default \u003d true"},"cassandra.hosts":{"defaultValue":"localhost","description":"Comma separated Cassandra hosts (DNS name or IP address). Default \u003d localhost. Ex: \u0027192.168.0.12,node2,node3\u0027"},"cassandra.credentials.username":{"defaultValue":"none","description":"Cassandra credentials username. Default \u003d \u0027none\u0027"},"cassandra.pooling.new.connection.threshold.local":{"defaultValue":"100","description":"Cassandra new connection threshold local. Protocol V2 and below default \u003d 100Protocol V3 and above default \u003d 800"},"cassandra.socket.read.timeout.millisecs":{"defaultValue":"12000","description":"Cassandra socket read timeout in millisecs. Default \u003d 12000"},"cassandra.load.balancing.policy":{"defaultValue":"DEFAULT","description":"Cassandra Load Balancing Policy. Default \u003d new TokenAwarePolicy(new DCAwareRoundRobinPolicy())"},"cassandra.pooling.max.request.per.connection.local":{"defaultValue":"1024","description":"Cassandra max request per connection local. Protocol V2 and below default \u003d 128Protocol V3 and above default \u003d 1024"},"cassandra.cluster":{"defaultValue":"Test Cluster","description":"Cassandra cluster name. Default \u003d \u0027Test Cluster\u0027"},"cassandra.pooling.heartbeat.interval.seconds":{"defaultValue":"30","description":"Cassandra pool heartbeat interval in secs. Default \u003d 30"},"cassandra.query.default.serial.consistency":{"defaultValue":"SERIAL","description":"Cassandra query default serial consistency level. Default \u003d SERIAL"},"cassandra.retry.policy":{"defaultValue":"DEFAULT","description":"Cassandra Retry Policy. Default \u003d DefaultRetryPolicy.INSTANCE"},"cassandra.native.port":{"defaultValue":"9042","description":"Cassandra native port. Default \u003d 9042"},"cassandra.interpreter.parallelism":{"defaultValue":"10","description":"Cassandra interpreter parallelism.Default \u003d 10"},"cassandra.pooling.pool.timeout.millisecs":{"defaultValue":"5000","description":"Cassandra pool time out in millisecs. Default \u003d 5000"},"cassandra.pooling.max.request.per.connection.remote":{"defaultValue":"256","description":"Cassandra max request per connection remote. Protocol V2 and below default \u003d 128Protocol V3 and above default \u003d 256"},"cassandra.compression.protocol":{"defaultValue":"NONE","description":"Cassandra compression protocol. Available values: NONE, SNAPPY, LZ4. Default \u003d NONE"},"cassandra.socket.connection.timeout.millisecs":{"defaultValue":"5000","description":"Cassandra socket default connection timeout in millisecs. Default \u003d 5000"},"cassandra.query.default.consistency":{"defaultValue":"ONE","description":"Cassandra query default consistency level. Default \u003d ONE"},"cassandra.keyspace":{"defaultValue":"system","description":"Cassandra keyspace name. Default \u003d \u0027system\u0027"},"cassandra.reconnection.policy":{"defaultValue":"DEFAULT","description":"Cassandra Reconnection Policy. Default \u003d new ExponentialReconnectionPolicy(1000, 10 * 60 * 1000)"},"cassandra.pooling.max.connection.per.host.local":{"defaultValue":"8","description":"Cassandra max connection per host local. Protocol V2 and below default \u003d 8Protocol V3 and above default \u003d 1"},"cassandra.credentials.password":{"defaultValue":"none","description":"Cassandra credentials password. Default \u003d \u0027none\u0027"},"cassandra.protocol.version":{"defaultValue":"3","description":"Cassandra protocol version. Default \u003d 3"},"cassandra.max.schema.agreement.wait.second":{"defaultValue":"10","description":"Cassandra max schema agreement wait in second.Default \u003d ProtocolOptions.DEFAULT_MAX_SCHEMA_AGREEMENT_WAIT_SECONDS"},"cassandra.pooling.core.connection.per.host.remote":{"defaultValue":"1","description":"Cassandra core connection per host remove. Protocol V2 and below default \u003d 1Protocol V3 and above default \u003d 1"},"cassandra.pooling.core.connection.per.host.local":{"defaultValue":"2","description":"Cassandra core connection per host local. Protocol V2 and below default \u003d 2Protocol V3 and above default \u003d 1"},"cassandra.pooling.max.connection.per.host.remote":{"defaultValue":"2","description":"Cassandra max connection per host remote. Protocol V2 and below default \u003d 2Protocol V3 and above default \u003d 1"},"cassandra.pooling.idle.timeout.seconds":{"defaultValue":"120","description":"Cassandra idle time out in seconds. Default \u003d 120"},"cassandra.speculative.execution.policy":{"defaultValue":"DEFAULT","description":"Cassandra Speculative Execution Policy. Default \u003d NoSpeculativeExecutionPolicy.INSTANCE"}},"path":"/home/Downloads/incubator-zeppelin-master/interpreter/cassandra"},"lens.lens":{"name":"lens","group":"lens","className":"org.apache.zeppelin.lens.LensInterpreter","properties":{"lens.server.base.url":{"defaultValue":"http://\u003chostname\u003e:\u003cport\u003e/lensapi","description":"The URL for Lens Server"},"zeppelin.lens.maxThreads":{"defaultValue":"10","description":"If concurrency is true then how many threads?"},"zeppelin.lens.maxResults":{"defaultValue":"1000","description":"max number of rows to display"},"lens.client.dbname":{"defaultValue":"default","description":"The database schema name"},"lens.query.enable.persistent.resultset":{"defaultValue":"false","description":"Apache Lens to persist result in HDFS?"},"zeppelin.lens.run.concurrent":{"defaultValue":"true","description":"Run concurrent Lens Sessions"},"lens.session.cluster.user":{"defaultValue":"default","description":"Hadoop cluster username"}},"path":"/home/Downloads/incubator-zeppelin-master/interpreter/lens"},"spark.spark":{"name":"spark","group":"spark","className":"org.apache.zeppelin.spark.SparkInterpreter","properties":{"spark.executor.memory":{"defaultValue":"512m","description":"Executor memory per worker instance. ex) 512m, 32g"},"args":{"defaultValue":"","description":"spark commandline args"},"spark.yarn.jar":{"defaultValue":"","description":"The location of the Spark jar file. If you use yarn as a cluster, we should set this value"},"zeppelin.spark.useHiveContext":{"defaultValue":"true","description":"Use HiveContext instead of SQLContext if it is true."},"spark.app.name":{"defaultValue":"Zeppelin","description":"The name of spark application."},"spark.cores.max":{"defaultValue":"","description":"Total number of cores to use. Empty value uses all available core."},"zeppelin.spark.maxResult":{"defaultValue":"1000","description":"Max number of SparkSQL result to display."},"master":{"defaultValue":"local[*]","description":"Spark master uri. ex) spark://masterhost:7077"}},"path":"/home/Downloads/incubator-zeppelin-master/interpreter/spark"},"angular.angular":{"name":"angular","group":"angular","className":"org.apache.zeppelin.angular.AngularInterpreter","properties":{},"path":"/home/Downloads/incubator-zeppelin-master/interpreter/angular"},"phoenix.sql":{"name":"sql","group":"phoenix","className":"org.apache.zeppelin.phoenix.PhoenixInterpreter","properties":{"phoenix.jdbc.url":{"defaultValue":"jdbc:phoenix:localhost:2181:/hbase-unsecure","description":"Phoenix JDBC connection string"},"phoenix.user":{"defaultValue":"","description":"The Phoenix user"},"phoenix.driver.name":{"defaultValue":"org.apache.phoenix.jdbc.PhoenixDriver","description":"Phoenix Driver classname."},"phoenix.password":{"defaultValue":"","description":"The password for the Phoenix user"},"phoenix.max.result":{"defaultValue":"1000","description":"Max number of SQL results to display."}},"path":"/home/Downloads/incubator-zeppelin-master/interpreter/phoenix"},"spark.pyspark":{"name":"pyspark","group":"spark","className":"org.apache.zeppelin.spark.PySparkInterpreter","properties":{"spark.home":{"defaultValue":"","description":"Spark home path. Should be provided for pyspark"},"zeppelin.pyspark.python":{"defaultValue":"python","description":"Python command to run pyspark with"}},"path":"/home/Downloads/incubator-zeppelin-master/interpreter/spark"},"spark.sql":{"name":"sql","group":"spark","className":"org.apache.zeppelin.spark.SparkSqlInterpreter","properties":{"zeppelin.spark.concurrentSQL":{"defaultValue":"false","description":"Execute multiple SQL concurrently if set true."},"zeppelin.spark.maxResult":{"defaultValue":"1000","description":"Max number of SparkSQL result to display."}},"path":"/home/Downloads/incubator-zeppelin-master/interpreter/spark"},"spark.dep":{"name":"dep","group":"spark","className":"org.apache.zeppelin.spark.DepInterpreter","properties":{"zeppelin.dep.localrepo":{"defaultValue":"local-repo","description":"local repository for dependency loader"}},"path":"/home/Downloads/incubator-zeppelin-master/interpreter/spark"}}}