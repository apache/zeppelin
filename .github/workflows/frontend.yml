name: frontend

on:
  push:
    branches-ignore:
      - 'dependabot/**'
  pull_request:
    branches:
      - master
      - 'branch-*'

env:
  # Disable keepAlive and pool
  # https://github.com/actions/virtual-environments/issues/1499#issuecomment-689467080
  MAVEN_OPTS: >-
      -Xms1024M -Xmx2048M -XX:MaxMetaspaceSize=1024m -XX:-UseGCOverheadLimit
      -Dhttp.keepAlive=false
      -Dmaven.wagon.http.pool=false
      -Dmaven.wagon.http.retryHandler.count=3
  MAVEN_ARGS: >-
      -B --no-transfer-progress
  ZEPPELIN_HELIUM_REGISTRY: helium
  SPARK_PRINT_LAUNCH_COMMAND: "true"
  SPARK_LOCAL_IP: 127.0.0.1
  ZEPPELIN_LOCAL_IP: 127.0.0.1
  INTERPRETERS: '!hbase,!jdbc,!file,!flink,!cassandra,!elasticsearch,!bigquery,!alluxio,!livy,!groovy,!java,!neo4j,!sparql,!mongodb'

permissions:
  contents: read # to fetch code (actions/checkout)

jobs:
  run-e2e-tests-in-zeppelin-web:
    runs-on: ubuntu-24.04
    steps:
      - name: Checkout
        uses: actions/checkout@v4
      - name: Tune Runner VM
        uses: ./.github/actions/tune-runner-vm
      - name: Set up JDK 11
        uses: actions/setup-java@v4
        with:
          distribution: 'temurin'
          java-version: 11
      - name: Cache local Maven repository
        uses: actions/cache@v4
        with:
          path: |
            ~/.m2/repository
            !~/.m2/repository/org/apache/zeppelin/
            ~/.spark-dist
            ~/.cache
          key: ${{ runner.os }}-zeppelin-${{ hashFiles('**/pom.xml') }}
          restore-keys: |
            ${{ runner.os }}-zeppelin-
      - name: Install application
        run: ./mvnw clean install -DskipTests -am -pl zeppelin-web,zeppelin-web-angular -Pweb-classic -Pspark-scala-2.12 -Pspark-3.4 -Pweb-dist ${MAVEN_ARGS}
      - name: Run headless test
        run: xvfb-run --auto-servernum --server-args="-screen 0 1024x768x24" ./mvnw verify -pl zeppelin-web -Pweb-classic -Pspark-scala-2.12 -Pspark-3.4 -Pweb-dist -Pweb-e2e ${MAVEN_ARGS}
      - name: Print zeppelin logs
        if: always()
        run: if [ -d "logs" ]; then cat logs/*; fi

  run-tests-in-zeppelin-web-angular:
    runs-on: ubuntu-24.04
    steps:
      - name: Checkout
        uses: actions/checkout@v4
      - name: Tune Runner VM
        uses: ./.github/actions/tune-runner-vm
      - name: Set up JDK 11
        uses: actions/setup-java@v4
        with:
          distribution: 'temurin'
          java-version: 11
      - name: Cache local Maven repository
        uses: actions/cache@v4
        with:
          path: |
            ~/.m2/repository
            !~/.m2/repository/org/apache/zeppelin/
            ~/.spark-dist
            ~/.cache
          key: ${{ runner.os }}-zeppelin-${{ hashFiles('**/pom.xml') }}
          restore-keys: |
            ${{ runner.os }}-zeppelin-
      - name: Run headless test
        run: xvfb-run --auto-servernum --server-args="-screen 0 1024x768x24" ./mvnw package -pl zeppelin-web-angular ${MAVEN_ARGS}
      
  run-playwright-e2e-tests:
    runs-on: ubuntu-24.04
    steps:
      - name: Checkout
        uses: actions/checkout@v4
      - name: Tune Runner VM
        uses: ./.github/actions/tune-runner-vm
      - name: Set up JDK 11
        uses: actions/setup-java@v4
        with:
          distribution: 'temurin'
          java-version: 11
      - name: Set up Node.js 16
        uses: actions/setup-node@v4
        with:
          node-version: 16
          cache: 'npm'
          cache-dependency-path: zeppelin-web-angular/package-lock.json
      - name: Cache local Maven repository
        uses: actions/cache@v4
        with:
          path: |
            ~/.m2/repository
            !~/.m2/repository/org/apache/zeppelin/
            ~/.spark-dist
            ~/.cache
          key: ${{ runner.os }}-zeppelin-${{ hashFiles('**/pom.xml') }}
          restore-keys: |
            ${{ runner.os }}-zeppelin-
      - name: Install Zeppelin backend
        run: ./mvnw clean install -DskipTests -am -pl zeppelin-server,zeppelin-web,zeppelin-web-angular -Pweb-classic -Pspark-scala-2.12 -Pspark-3.4 -Pweb-dist ${MAVEN_ARGS}
      - name: Install Angular dependencies
        working-directory: zeppelin-web-angular
        run: npm ci
      - name: Install Playwright browsers
        working-directory: zeppelin-web-angular
        run: npx playwright install --with-deps
      - name: Start Zeppelin server
        run: |
          ./mvnw exec:java -pl zeppelin-server -Dexec.mainClass="org.apache.zeppelin.server.ZeppelinServer" -Dexec.args="--config zeppelin-site.xml" &
          echo "Waiting for Zeppelin server to start..."
          for i in {1..60}; do
            if curl -f http://localhost:8080/api/notebook > /dev/null 2>&1; then
              echo "Zeppelin server is ready!"
              break
            fi
            echo "Waiting... ($i/60)"
            sleep 5
          done
      - name: Run Playwright E2E tests
        working-directory: zeppelin-web-angular
        run: npm run e2e:ci
        env:
          CI: "true"
      - name: Upload Playwright report
        uses: actions/upload-artifact@v4
        if: always()
        with:
          name: playwright-report
          path: zeppelin-web-angular/playwright-report/
          retention-days: 30
      - name: Print Zeppelin logs
        if: always()
        run: if [ -d "logs" ]; then cat logs/*; fi

  test-selenium-with-spark-module-for-spark-3-5:
    runs-on: ubuntu-24.04
    defaults:
      run:
        shell: bash -l {0}
    env:
      ZEPPELIN_SELENIUM_BROWSER: firefox
    steps:
      - name: Checkout
        uses: actions/checkout@v4
      - name: Install Firefox (non-snap) and geckodriver
        run: |
          sudo snap remove firefox || true
          sudo add-apt-repository -y ppa:mozillateam/ppa
          sudo tee -a /etc/apt/preferences.d/mozilla-firefox <<EOF
          Package: *
          Pin: release o=LP-PPA-mozillateam
          Pin-Priority: 1001
          EOF
          sudo apt-get update
          sudo apt-get install -y firefox
          GECKODRIVER_VERSION=$(curl -s https://api.github.com/repos/mozilla/geckodriver/releases/latest | grep tag_name | cut -d '"' -f 4)
          wget -q https://github.com/mozilla/geckodriver/releases/download/${GECKODRIVER_VERSION}/geckodriver-${GECKODRIVER_VERSION}-linux64.tar.gz
          tar -xzf geckodriver-${GECKODRIVER_VERSION}-linux64.tar.gz
          chmod +x geckodriver
          sudo mv geckodriver /usr/local/bin/
          geckodriver --version
          firefox --version
      - name: Setup conda environment with python 3.9 and R
        uses: conda-incubator/setup-miniconda@v3
        with:
          activate-environment: python_3_with_R
          environment-file: testing/env_python_3_with_R.yml
          python-version: 3.9
          channels: conda-forge,defaults
          channel-priority: strict
          auto-activate-base: false
          use-mamba: true
      - name: Install Environment
        run: |
          ./mvnw clean install -DskipTests -am -pl zeppelin-integration -Pweb-classic -Pintegration -Pspark-scala-2.12 -Pspark-3.5 -Pweb-dist ${MAVEN_ARGS}
      - name: Print browser version
        run: |
          echo "Firefox version:"
          firefox --version
          echo "GeckoDriver version:"
          geckodriver --version
      - name: Run integration tests with Firefox
        run: |
          xvfb-run --auto-servernum --server-args="-screen 0 1600x1024x16" \
            ./mvnw verify -DfailIfNoTests=false \
            -pl zeppelin-integration \
            -Pweb-classic -Pintegration -Pspark-scala-2.12 -Pspark-3.5 -Pweb-dist -Pusing-source-tree \
            ${MAVEN_ARGS}
