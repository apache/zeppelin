/**
 * Licensed to the Apache Software Foundation (ASF) under one
 * or more contributor license agreements.  See the NOTICE file
 * distributed with this work for additional information
 * regarding copyright ownership.  The ASF licenses this file
 * to you under the Apache License, Version 2.0 (the
 * "License"); you may not use this file except in compliance
 * with the License.  You may obtain a copy of the License at
 *
 *     http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */

syntax = "proto3";
option java_package = "org.apache.zeppelin.python2.rpc";


service PythonInterpreter {

  // Blocking RPC to interpreter pice of code
  //
  //
  rpc Interprete (CodeInterpreteRequest) returns (InterpetedResult);

  rpc AutoComplete (CodeCompletionRequest) returns (CodeSuggestions);
  rpc Progress (Void) returns (ProgressIndicator);

  // Terminates this RPC Server python process
  rpc Shutdown (Void) returns (Void);

  //TODO(bzz):
  // log (stderr) streaming?
  // result streaming? What is result in TensorFlow?
}

message CodeInterpreteRequest {
  string code = 1;
}

message InterpetedResult {
  string output = 1;
  string status = 2; //TODO(bzz) replace \w enum
}

message CodeCompletionRequest {
  string context = 1;
}
message CodeSuggestions {
  repeated string suggestions=1;
}

message ProgressIndicator {
  int32 progress = 1;
}

message Void {
}